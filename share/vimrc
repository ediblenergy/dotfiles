set nocompatible
set history=100
set ruler
set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)
filetype plugin indent on
syntax on

" filetype plugin on
set smartindent
set backspace=indent,eol,start
"set hlsearch
set nohls " hlsearch if want highlighting
set showcmd		" display incomplete commands
syntax on
set winminheight=0
set incsearch
set magic
" I dont like tmp vim files, turn them off:
set nobackup
set nowritebackup
set noswapfile
" imap <C-'> <C-]>pi
map <F12> <C-W>_
map <F11> 25<C-W>_
 set matchpairs+=<:>
map <C-k> :tabnext<CR>
" search for a visually selected block
vmap  / y/<C-R>=substitute(escape(@", '\\/.*$^~[]'), "\n", "\\\\n", "g")<CR><CR>
set wildmenu
"Comment lines with ,# or ,/ for C or js type comments
map ,/ :s/^/\/\//<CR> <Esc>:noh<CR>
map ./ :s/^\/\///<CR> <Esc>:noh<CR>
map ,# :s/^/#/<CR> <Esc>:noh<CR>
map .# :s/^#//<CR> <Esc>:noh<CR>
map <C-J> <C-W>x<C-W><Down>
map <Leader># <c-[>'<^r<CR>i/*<c-[>'>$i*/<c-[>
set tabstop=4
set shiftwidth=4
set expandtab
autocmd BufRead *.as set filetype=java
autocmd BufRead *.go set filetype=go
autocmd BufRead *.tt set filetype=php
autocmd BufRead *.pp set filetype=ruby
au BufNewFile,BufRead *.hx set filetype=haxe
set dir=~/.vim/swp
" show matching brackets
autocmd FileType perl set showmatch
colors jellybeans

" check perl code with :make
"autocmd FileType perl set makeprg=perl\ -Ilib\ -c\ %\ $*
autocmd FileType perl set errorformat=%f:%l:%m
autocmd FileType perl set autowrite
autocmd FileType perl set expandtab
autocmd FileType perl set equalprg=perltidy
autocmd FileType perl set iskeyword+=:
autocmd FileType javascript set iskeyword-=:
autocmd FileType javascript set equalprg=js_beautify.pl\ -
autocmd FileType make set noexpandtab
let perl_include_pod = 1
autocmd FileType set equalprg&
" syntax color complex things like @{${"foo"}}
" One less keypress to enter cmd mode
nnoremap ; :
" gf will now split current file and open the path under the cursor
nnoremap gf :sp<CR>gf
syntax enable
set smartcase
set nofoldenable
set complete-=i
"/*<CR><c-]>'>$i*/<CR>
"show me extraneous whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
"remove trailing whitespace
map ,$ :%s/\s\+$//g<CR>
